/**
 * Adyen Payout API
 * A set of API endpoints that allow you to store payout details, confirm, or decline a payout.  For more information, refer to [Online payouts](https://docs.adyen.com/checkout/online-payouts).
 *
 * The version of the OpenAPI document: 51
 * Contact: support@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var ThreeDS2RequestData = /** @class */ (function () {
    function ThreeDS2RequestData() {
    }
    ThreeDS2RequestData.getAttributeTypeMap = function () {
        return ThreeDS2RequestData.attributeTypeMap;
    };
    ThreeDS2RequestData.discriminator = undefined;
    ThreeDS2RequestData.attributeTypeMap = [
        {
            "name": "acquirerBIN",
            "baseName": "acquirerBIN",
            "type": "string"
        },
        {
            "name": "acquirerMerchantID",
            "baseName": "acquirerMerchantID",
            "type": "string"
        },
        {
            "name": "authenticationOnly",
            "baseName": "authenticationOnly",
            "type": "boolean"
        },
        {
            "name": "challengeIndicator",
            "baseName": "challengeIndicator",
            "type": "ThreeDS2RequestData.ChallengeIndicatorEnum"
        },
        {
            "name": "deviceChannel",
            "baseName": "deviceChannel",
            "type": "string"
        },
        {
            "name": "deviceRenderOptions",
            "baseName": "deviceRenderOptions",
            "type": "DeviceRenderOptions"
        },
        {
            "name": "mcc",
            "baseName": "mcc",
            "type": "string"
        },
        {
            "name": "merchantName",
            "baseName": "merchantName",
            "type": "string"
        },
        {
            "name": "messageVersion",
            "baseName": "messageVersion",
            "type": "string"
        },
        {
            "name": "notificationURL",
            "baseName": "notificationURL",
            "type": "string"
        },
        {
            "name": "sdkAppID",
            "baseName": "sdkAppID",
            "type": "string"
        },
        {
            "name": "sdkEncData",
            "baseName": "sdkEncData",
            "type": "string"
        },
        {
            "name": "sdkEphemPubKey",
            "baseName": "sdkEphemPubKey",
            "type": "SDKEphemPubKey"
        },
        {
            "name": "sdkMaxTimeout",
            "baseName": "sdkMaxTimeout",
            "type": "number"
        },
        {
            "name": "sdkReferenceNumber",
            "baseName": "sdkReferenceNumber",
            "type": "string"
        },
        {
            "name": "sdkTransID",
            "baseName": "sdkTransID",
            "type": "string"
        },
        {
            "name": "threeDSCompInd",
            "baseName": "threeDSCompInd",
            "type": "string"
        },
        {
            "name": "threeDSRequestorID",
            "baseName": "threeDSRequestorID",
            "type": "string"
        },
        {
            "name": "threeDSRequestorName",
            "baseName": "threeDSRequestorName",
            "type": "string"
        },
        {
            "name": "threeDSRequestorURL",
            "baseName": "threeDSRequestorURL",
            "type": "string"
        },
        {
            "name": "transactionType",
            "baseName": "transactionType",
            "type": "ThreeDS2RequestData.TransactionTypeEnum"
        },
        {
            "name": "whiteListStatus",
            "baseName": "whiteListStatus",
            "type": "string"
        }
    ];
    return ThreeDS2RequestData;
}());
export { ThreeDS2RequestData };
(function (ThreeDS2RequestData) {
    var ChallengeIndicatorEnum;
    (function (ChallengeIndicatorEnum) {
        ChallengeIndicatorEnum[ChallengeIndicatorEnum["NoPreference"] = 'noPreference'] = "NoPreference";
        ChallengeIndicatorEnum[ChallengeIndicatorEnum["RequestNoChallenge"] = 'requestNoChallenge'] = "RequestNoChallenge";
        ChallengeIndicatorEnum[ChallengeIndicatorEnum["RequestChallenge"] = 'requestChallenge'] = "RequestChallenge";
        ChallengeIndicatorEnum[ChallengeIndicatorEnum["RequestChallengeAsMandate"] = 'requestChallengeAsMandate'] = "RequestChallengeAsMandate";
    })(ChallengeIndicatorEnum = ThreeDS2RequestData.ChallengeIndicatorEnum || (ThreeDS2RequestData.ChallengeIndicatorEnum = {}));
    var TransactionTypeEnum;
    (function (TransactionTypeEnum) {
        TransactionTypeEnum[TransactionTypeEnum["GoodsOrServicePurchase"] = 'goodsOrServicePurchase'] = "GoodsOrServicePurchase";
        TransactionTypeEnum[TransactionTypeEnum["CheckAcceptance"] = 'checkAcceptance'] = "CheckAcceptance";
        TransactionTypeEnum[TransactionTypeEnum["AccountFunding"] = 'accountFunding'] = "AccountFunding";
        TransactionTypeEnum[TransactionTypeEnum["QuasiCashTransaction"] = 'quasiCashTransaction'] = "QuasiCashTransaction";
        TransactionTypeEnum[TransactionTypeEnum["PrepaidActivationAndLoad"] = 'prepaidActivationAndLoad'] = "PrepaidActivationAndLoad";
    })(TransactionTypeEnum = ThreeDS2RequestData.TransactionTypeEnum || (ThreeDS2RequestData.TransactionTypeEnum = {}));
})(ThreeDS2RequestData || (ThreeDS2RequestData = {}));
//# sourceMappingURL=threeDS2RequestData.js.map